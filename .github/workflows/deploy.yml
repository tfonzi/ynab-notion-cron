name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: us-east-1
      NODE_VERSION: 18
      TERRAFORM_VERSION: 1.5.7
      AWS_ROLE_ARN: "arn:aws:iam::611260057175:role/github-actions-role"
      # Terraform variables mapping
      TF_VAR_ynab_access_token: ${{ secrets.YNAB_TOKEN }}
      TF_VAR_github_repository: ${{ github.repository }}
      TF_VAR_aws_region: us-east-1
      TF_VAR_terraform_state_bucket: ynab-notion-cron-bucket
      TF_VAR_terraform_state_lock_table_arn: arn:aws:dynamodb:us-east-1:611260057175:table/terraform-state-locks
    
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: ./terraform 